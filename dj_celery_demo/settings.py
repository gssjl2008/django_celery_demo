"""
Django settings for dj_celery_demo project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'hyy9a#w+j+2$m6se$6no#sg2dwy(_@%72s#bg3*ka@9vb_dtve'

# SECURITY WARNING: don't run with debug turned on in production!
# 设置True,默认本机浏览器访问调试
# 设置False，生产必须填写ALLOWED_HOSTS， 使用 ['*'] 容许所有域名访问
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',             # 后台管理系统
    'django.contrib.auth',              # 用户认证系统
    'django.contrib.contenttypes',      # 模型Model元数据
    'django.contrib.sessions',          # 会话， 用于记录用户信息
    'django.contrib.messages',          # 消息提示功能
    'django.contrib.staticfiles',       # 静态资源查找

    'celery_demo',
    'djcelery'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',            # 新增中间件， 支持中文显示
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dj_celery_demo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],                   # 指定 templates 位置
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dj_celery_demo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {                      #使用默认 default
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
    #,
    #'mysql': {
    #    'ENGINE': 'django.db.backends.mysql',
    #    'NAME': 'django',
    #    'USER': 'root',
    #    'PASSWORD': '123456',
    #    'HOST': '123.123.123.123',
    #    'PORT': '3306',
    #},
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

# 项目上线时， 必须配置  STATICFILES_ROOT 然后执行 python manage.py collectstaic 实现服务器和项目之间的映射
# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'),] 
# STATIC_ROOT = os.path.join(BASE_DIR, 'static_root')



# 导入celery 配置
from .celeryconfig import *
